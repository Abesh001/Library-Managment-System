//Creating table:

CREATE TABLE borrow (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    borrow_date DATE NOT NULL,
    due_date DATE NOT NULL
);





//app.py with Mysql Database:

from flask import Flask, render_template, redirect, request, session, url_for, flash
import mysql.connector

app = Flask(__name__)
app.secret_key = 'qwertyuiop1234567890'

# MySQL database connection configuration
db_config = {
    'host': 'localhost',
    'user': 'root',
    'password': '',
    'database': 'bookself'
}

@app.route('/logout')
def logout():
    session.clear()
    flash('You have been logged out')
    return redirect(url_for('login'))

@app.route('/', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form['username']
        password = request.form['password']
        if username == 'admin' and password == 'admin':
            # store the username in the session object
            session['username'] = username
            return redirect(url_for('dashboard'))
        else:
            flash('Invalid username or password')
            return render_template('login.html')
    else:
        return render_template('login.html')


@app.route('/dashboard')
def dashboard():
    # username = session['user-name-input']
    return render_template('index.html')

@app.route('/borrow', methods=['POST'])
def borrow():
    if request.method == 'POST':
        # username = request.form['user-name-input']
        borrow_date = request.form['borrow-date-input']
        due_date = request.form['due-date-input']

        # Connect to the database
        cnx = mysql.connector.connect(**db_config)
        cursor = cnx.cursor()

        # Insert the borrow information into the database
        insert_query = "INSERT INTO borrow (username, borrow_date, due_date) VALUES (%s, %s, %s)"
        values = ( borrow_date, due_date)
        cursor.execute(insert_query, values)

        # Commit the changes and close the database connection
        cnx.commit()
        cursor.close()
        cnx.close()

        flash('Book borrowed successfully')
        return redirect(url_for('dashboard'))

    return render_template('borrow.html')

if __name__ == '__main__':
    app.run()